version: "3.9"

services:
  api:
    build: ./api
    container_name: go_api
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build: ./fastapi_worker
    container_name: fastapi_worker
    restart: unless-stopped
    ports:
      - "8081:8080"
    env_file:
      - .env
    depends_on:
      - localstack
    networks:
      - app-network
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8080"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/docs || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  localstack:
    image: localstack/localstack
    container_name: localstack_main
    restart: unless-stopped
    ports:
      - "4566:4566"
    env_file:
      - .env
    environment:
      - SERVICES=${LOCALSTACK_SERVICES}
      - DEBUG={LOCALSTACK_DEBUG}
      - DATA_DIR=/tmp/localstack/data
      - PERSISTENCE=1
    volumes:
      - localstack-data:/var/lib/localstack
      - ./init-scripts:/etc/localstack/init/ready.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  sqs_worker:
    build: ./fastapi_worker # koristi isti kod i image
    container_name: sqs_worker
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - localstack
    networks:
      - app-network
    command: ["python", "worker.py"]
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f sqs_worker || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  localstack-data:
